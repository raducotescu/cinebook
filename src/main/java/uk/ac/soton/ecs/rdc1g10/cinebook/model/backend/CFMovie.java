package uk.ac.soton.ecs.rdc1g10.cinebook.model.backend;

import org.eclipse.persistence.indirection.ValueHolder;
import org.eclipse.persistence.indirection.ValueHolderInterface;

/**
 *  ###  Generated by EclipseLink Project EclipseLink Workbench 2.1.2 - Tue Jan 11 00:53:09 GMT 2011.  ###
 */

public class CFMovie {

	private Integer sum;
	private Integer count;
	private ValueHolderInterface movie2;
	private ValueHolderInterface movie1;

public CFMovie() {
	this.movie1 = 
		/* The instance variable "movie1" is mapped as a 1-1 that controls writing of a primary key.  A value must be provided before this object is committed. */
		new ValueHolder();
	this.movie2 = 
		/* The instance variable "movie2" is mapped as a 1-1 that controls writing of a primary key.  A value must be provided before this object is committed. */
		new ValueHolder();
}

public Integer getCount() {
	return this.count;
}

public Movie getMovie1() {
	return (Movie)getMovie1Holder().getValue();
}

protected ValueHolderInterface getMovie1Holder() {
	return this.movie1;
}

public Movie getMovie2() {
	return (Movie)getMovie2Holder().getValue();
}

protected ValueHolderInterface getMovie2Holder() {
	return this.movie2;
}

public Integer getSum() {
	return this.sum;
}

public void setCount(Integer count) {
	this.count = count;
}

public void setMovie1(ValueHolderInterface movie1) {
	this.movie1 = movie1;
}

public void setMovie1(Movie movie1) {
	this.movie1.setValue(movie1);
}

public void setMovie2(ValueHolderInterface movie2) {
	this.movie2 = movie2;
}

public void setMovie2(Movie movie2) {
	this.movie2.setValue(movie2);
}

public void setSum(Integer sum) {
	this.sum = sum;
}

}
